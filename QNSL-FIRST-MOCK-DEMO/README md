


---

# QNSL First Mock Demo  
(Superpositioned Quantum-Classic Natural Supreme Language)  

---הערה חשובה לגבי מנוע מולטימדיה (SCMP)

בדמו הנוכחי המוקד הוא על מודול עיבוד השפה הטבעית (SNLP) וסימולציה של רכיבים קוונטיים.
כרגע הדמו לא כולל את מנוע המולטימדיה (SCMP) – Superpositioned Creative Multimodal Processor.
דמו נפרד ומורחב הכולל גם את מנוע ה-SCMP יפותח ויפורסם בהמשך.


## תיאור כללי

פרויקט זה מציג דמו ראשוני ומודולרי של מערכת QNSL, הכוללת את מודול עיבוד השפה הטבעית הסינרגי־רגשי (SNLP) יחד עם מנוע עיבוד הנתונים (SCPU) ומנוע התזמור (SLO) ליצירת קוד ייחודי משולב.

המערכת מתוכננת לשלב חישוביות קלאסית וקוונטית, תוך תזמור והרכבה של מודלים מגוונים (כולל מודלים פתוחים מ־Hugging Face, GitHub, Replicate) עם יכולות למידה מתמשכת.

---

## רכיבי המערכת

| רכיב | תיאור |
|-|-|
| **SNLP** | מודול עיבוד שפה טבעית סינרגי־רגשי - זיהוי רגשות, תתי-טקסט, הקשרים תרבותיים ועוד. |
| **SCPU** | מנוע עיבוד נתונים אחראי על למידה מתמשכת ועיבוד הפקודות ליצירת קוד ייחודי. |
| **SLO** | מנוע תזמור לשפות תכנות - מנגנון הרכבה והרצה של מודלים ומנועי קוד שונים ליצירת פתרון אחיד. |

---

## מטרות הדמו

- להדגים את היתכנות שילוב מודלים רגשים וקוונטיים בסביבת עבודה אחת.  
- להראות תזמור מודלים מרובים עם יכולת להרחיב בקלות עם חיבורי API חדשים.  
- לאפשר למשתמש להפעיל דמו עם הסברים וקריאות מדומות (mock calls) ללא צורך במפתחות API אמיתיים.  

---

## שימוש במפתחות API

כדי להפעיל את הדמו עם חיבור אמיתי ל-API, יש להגדיר מפתחות סודיים (Secrets) או קובץ `.env` בהתאם לסביבת העבודה:

### 1. שימוש בקובץ `.env`

- צור קובץ `.env` בתיקיית הפרויקט.  
- הכנס לתוכו את מפתחות ה-API בצורה הבאה:

HUGGINGFACE_API_KEY=your_huggingface_api_key_here REPLICATE_API_KEY=your_replicate_api_key_here QBRAID_API_KEY=your_qbraid_api_key_here IONQ_API_KEY=your_ionq_api_key_here BIGML_API_KEY=your_bigml_api_key_here GRAFBASE_API_KEY=your_grafbase_api_key_here

- הקובץ `.env` כלול ב-`.gitignore` כדי שלא יעלה לריפוזיטורי הציבורי.  

### 2. שימוש ב-GitHub Secrets (לריפוזיטורי ציבורי)

- עבור ל-Settings של הריפוזיטורי ב-GitHub.  
- בחר ב-Secrets and variables > Actions.  
- הוסף את מפתחות ה-API כניסויים (Secrets) עם השמות המתאימים (כמו לדוגמא `.env`).  
- הקוד יטען את המפתחות מתוך Secrets בסביבת ה־GitHub Actions או הרצה מקומית בעזרת ספריות תומכות.  

---

## חיבור ל־Figshare

הפרויקט מתועד גם ב־Figshare לשימור ושיתוף רשמי של התיעוד וקבצי המחקר.

### קישור לדף הפרויקט ב־Figshare:

[QNSL Project on Figshare](https://figshare.com/articles/dataset/GAIA-OS-QNSL-main_1_zip/29377454)

### הורדת קבצים מ־Figshare בדמו (דוגמא בפייתון):

```python
import requests

FIGSHARE_URL = "https://figshare.com/articles/dataset/GAIA-OS-QNSL-main_1_zip/29377454?file=55550735"

response = requests.get(FIGSHARE_URL)
if response.status_code == 200:
  with open("GAIA-OS-QNSL-main_1.zip", "wb") as f:
      f.write(response.content)
  print("הקובץ הורד בהצלחה")
else:
  print("בעיה בהורדת הקובץ")


---

הפעלת הדמו
הוראות הפעלה

התקן את הדרישות בסביבת העבודה (למשל ב־terminal או ב־Colab עם !pip):


pip install -r requirements.txt

הרץ את ה-Web UI:


streamlit run app.py


---
1. התקן את התלויות:



pip install -r requirements.txt

2. הפעל את הסקריפט לדמו (דוגמא):



python demo_run.py

3. במידה ואתה רוצה להשתמש במפתחות אמיתיים, ודא שהגדרת אותם בקובץ .env או ב-GitHub Secrets.




---

מבנה התיקיות והקבצים

Qnsl-first-mock-demo/
│
├── README.md               # הקובץ הזה - תיעוד מלא והסברים
├── demo_run.py             # סקריפט ראשי להרצת הדמו
├── config.py               # קובץ טעינת משתני סביבה ומפתחות API
├── snlp_module.py          # מודול עיבוד השפה הטבעית SNLP - דמה
├── scpu_module.py          # מנוע עיבוד נתונים SCPU - דמה
├── slo_module.py           # מנוע תזמור SLO - דמה
├── requirements.txt        # ספריות דרושות להפעלה
├── .env.example            # דוגמה לקובץ env - ללא מפתחות אמיתיים
└── utils.py                # קוד עזר לדמו


---

רישיון וזכויות יוצרים

כל הקוד והחומרים מוגנים ברישיון קנייני מחקרי תחת GAIA-OS-QNSL.
כל שימוש, שכפול או הפצה מחייב אישור מראש מהיוצר: גד מוני ספרא.
לפרטים נוספים, עיין בקובץ LICENSE.


---

יצירת ממשק Web לדמו

ניתן לפתח ממשק web פשוט שיקבל קלט טקסטואלי מהמשתמש, יפעיל את מודול ה־SNLP יחד עם מנועי התזמור והעיבוד, ויציג תוצאה אינטראקטיבית.

לדוגמא:

שימוש ב־Flask/Django או Node.js להצגת טופס קלט.

קריאות אסינכרוניות לסקריפטים של הדמו בצד השרת.

הצגת התוצאות בדפדפן בזמן אמת.



---

הערות נוספות

הקוד בדמו הוא דמה בלבד – הקריאות ל־API הן סימולטיביות.

ניתן להרחיב את הדמו לחיבור למודלים ושרתים אמיתיים בעתיד.

יש להקפיד על סודיות המפתחות ולטפל בהם בזהירות.



---

לשאלות והבהרות:
📧 omni-ai_muni@protonmail.com
🔗 https://github.com/muni211/GAIA-OS-QNSL


---

---



